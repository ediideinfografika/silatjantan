{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
  ]
%}
<style>


/*Legend specific*/
.legend {
  padding: 6px 8px;
  font: 14px Arial, Helvetica, sans-serif;
  background: white;
  background: rgba(255, 255, 255, 0.8);
  /*box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);*/
  /*border-radius: 5px;*/
  line-height: 24px;
  color: #555;
}
.legend h4 {
  text-align: center;
  font-size: 16px;
  margin: 2px 12px 8px;
  color: #777;
}

.legend span {
  position: relative;
  bottom: 3px;
}

.legend i {
  width: 18px;
  height: 18px;
  float: left;
  margin: 0 8px 0 0;
  opacity: 0.7;
}

.legend i.icon {
  background-size: 18px;
  background-color: rgba(255, 255, 255, 1);
}

</style>

<article{{ attributes.addClass(classes)|without('about') }}>
  <header>

  <div id="map" style="width:100%; height:600px;">  </div>
  <br><br>
  
   <table id="myTable" class="table table-striped table-bordered" width="100%">
  <thead>
    <tr>
    <th>STA Awal</th>
    <th>STA Akhir</th>
    <th>Kondisi</th>
    </tr>
  </thead>
 
 
 </table>
 
 
 
  
     <script src="https://unpkg.com/leaflet@1.0.3/dist/leaflet.js"></script>
     <script src="https://cdn.datatables.net/1.10.9/js/jquery.dataTables.min.js"></script>
     <script src="https://peta.ediide.com/modules/contrib/leaflet/js/leaflet.legend.js"></script>
	 <link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.3/dist/leaflet.css" />
	 <link rel="stylesheet" href="https://peta.ediide.com/modules/contrib/leaflet/js/leaflet-search.css" />
	 <link rel="stylesheet" href="https://cdn.datatables.net/1.10.9/css/jquery.dataTables.min.css" />
   

   <script>
	
	     var jalan002 = jQuery.ajax({
          url:"https://peta.ediide.com/sites/default/files/Jalan_Bajulan_Kenongrejo.geojson",
          dataType: "json",
          success: console.log("jalan002 data successfully loaded."),
          error: function (xhr) {
            alert(xhr.statusText)
          }
        })
		
		var jalanall = jQuery.ajax({
          url:"https://peta.ediide.com/sites/default/files/jalan.geojson",
          dataType: "json",
          success: console.log("jalanall data successfully loaded."),
          error: function (xhr) {
            alert(xhr.statusText)
          }
        })
		
		var featureNames = [];
		
            jQuery.when(jalan002,jalanall).done(function() {
            var map = L.map('map')
                .setView([-7.500,111.653], 14);

            var basemap = L.tileLayer('http://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> &copy; <a href="http://cartodb.com/attributions">CartoDB</a>',
                subdomains: 'abcd',
                maxZoom: 19
            }).addTo(map);
			
			
            // Add requested external GeoJSON to map
            var g002 = L.geoJSON(jalan002.responseJSON,{
			style: function(feature) {
				
				switch (feature.properties.Kondisi) {
					case 'S': return {color: "blue",weight: 4};
					case 'RR':   return {color: "red",weight: 4};
					case 'B':   return {color: "green",weight: 4};
				}				
				
			},
			
			
		onEachFeature: function(feature, featureLayer) 
		   {    
			
				featureLayer.bindPopup("<h4>Nama Ruas: " + feature.properties.Nm_Ruas 
				+ "<br>" + "Kondisi: " + feature.properties.Kondisi+"</h4>"
				+ "<br>" + "STA Awal: " + feature.properties.STA_Awal
				+ "<br>" + "STA Awal: " + feature.properties.STA_Akhir
				+ "<br>" + "Kecamatan: " + feature.properties.Kecamatan
				+ "<br>" + "Desa_Kel: " + feature.properties.Desa_Kel
				+ "<br>" + "Panjang (Km): " + feature.properties.Km_Akhir
				+ "<br>" + "Kode Infrastruktur: " + feature.properties.Kd_Inf
				+ "<br>" + "Kode jalan: " + feature.properties.Kd_Inf
				
				);   
				
				 featureNames.push({ STA_Awal: feature.properties.STA_Awal, STA_Akhir : feature.properties.STA_Akhir, Kondisi:feature.properties.Kondisi});
								
		   }
		   }).addTo(map);
		   
		   
		   
			
            var gAll = L.geoJSON(jalanall.responseJSON,{
			style: {
				weight: 2,
				color: "#620a0a",
				opacity: 1,
				fillColor: "red",
				fillOpacity: 0.5
			  },
		   onEachFeature: function(feature, featureLayer) 
		   {    
				featureLayer.bindPopup("Nama Ruas: " + feature.properties.Nm_Ruas 
				+ "<br>" + "Kecamatan: " + feature.properties.Kecamatan
				+ "<br>" + "Desa_Kel: " + feature.properties.Desa_Kel
				+ "<br>" + "Panjang (Km): " + feature.properties.Km_Akhir
				+ "<br>" + "Kode Infrastruktur: " + feature.properties.Kd_Inf
				+ "<br>" + "Kode jalan: " + feature.properties.Kd_Inf
				
				);   
								
		   }
		   }).addTo(map);
			gAll.bringToBack();
			
			
			
			
			//legend
		
		
			/*Legend specific*/
			var legend = L.control({ position: "bottomleft" });

			legend.onAdd = function(map) {
			  var div = L.DomUtil.create("div", "legend");
			  div.innerHTML += "<h4>Legenda</h4>";
			  div.innerHTML += '<i style="background: #008000"></i><span>Kondisi B</span><br>';
			  div.innerHTML += '<i style="background: #0000ff"></i><span>Kondisi S</span><br>';
			  div.innerHTML += '<i style="background: #ff0000"></i><span>Kondisi RR</span><br>';
			
			return div;
			};

			legend.addTo(map);

	console.log(featureNames);

		jQuery('#myTable').DataTable({
		  data: featureNames,
		  columns : [
                  {"data" : "STA_Awal"},
                  {"data" : "STA_Akhir"},
                  {"data" : "Kondisi"}
                 ],
		  scrollY: 300,
		  paging: false
		});


			
			
        });
		
		
		



		  </script>	 
  
    {{ title_prefix }}
    {% if not page %}
      <h2{{ title_attributes.addClass('node__title') }}>
        <a href="{{ url }}" rel="bookmark">{{ label }}</a>
      </h2>
    {% endif %}
    {% set title_suffix = '' %}
    {{ title_suffix }}
    {% if display_submitted %}
      <div class="node__meta">
        {{ author_picture }}
        <span{{ author_attributes }}>
          {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
        </span>
        {{ metadata }}
      </div>
    {% endif %}
  </header>
  <div{{ content_attributes.addClass('node__content', 'clearfix') }}>
    {{ content }}
  </div>
</article>
