{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
  ]
%}
<style>


/*Legend specific*/
.legend {
  padding: 6px 8px;
  font: 14px Arial, Helvetica, sans-serif;
  background: white;
  background: rgba(255, 255, 255, 0.8);
  /*box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);*/
  /*border-radius: 5px;*/
  line-height: 24px;
  color: #555;
}
.legend h4 {
  text-align: center;
  font-size: 16px;
  margin: 2px 12px 8px;
  color: #777;
}

.legend span {
  position: relative;
  bottom: 3px;
}

.legend i {
  width: 18px;
  height: 18px;
  float: left;
  margin: 0 8px 0 0;
  opacity: 1;
}

.legend i.icon {
  background-size: 18px;
  background-color: rgba(255, 255, 255, 1);
}

</style>

<article{{ attributes.addClass(classes)|without('about') }}>
  <header>
  <script   src="https://code.jquery.com/jquery-3.6.0.min.js"   integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="   crossorigin="anonymous"></script>
    <script src="https://unpkg.com/leaflet@1.3.0/dist/leaflet.js">
     <script src="https://cdn.datatables.net/1.10.9/js/jquery.dataTables.min.js"></script>
     <script src="https://peta.ediide.com/modules/contrib/leaflet/js/leaflet-search.js?v=9.5.1"></script>
     <script src="https://peta.ediide.com/modules/contrib/leaflet/js/leaflet.legend.js"></script>
     <script src="https://peta.ediide.com/modules/contrib/leaflet/js/fuse.min.js?v=9.5.1"></script>
	 <link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.3/dist/leaflet.css" />
	 <link rel="stylesheet" href="https://peta.ediide.com/modules/contrib/leaflet/js/leaflet-search.css" />
	 <link rel="stylesheet" href="https://cdn.datatables.net/1.10.9/css/jquery.dataTables.min.css" />
	 
 </header>
 
 
    {{ title_prefix }}
    {% if not page %}
      <h2{{ title_attributes.addClass('node__title') }}>
        <a href="{{ url }}" rel="bookmark">{{ label }}</a>
      </h2>
    {% endif %}
    {% set title_suffix = '' %}
    {{ title_suffix }}
    {% if display_submitted %}
      <div class="node__meta">
        {{ author_picture }}
        <span{{ author_attributes }}>
          {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
        </span>
        {{ metadata }}
      </div>
    {% endif %}
 
  <div{{ content_attributes.addClass('node__content', 'clearfix') }}>
    {# {{ content }} #}
	
	
	
  <div id="map" style="width:100%; height:600px;">  </div>
  <br><br>
 
  {% set jenis= node.field_jenis_peta.value %}
   {% set filex= "https://peta.ediide.com/sites/default/files/jalan.geojson" %}
   

{% if jenis is same as ('1')%}
 {% set filex= "https://peta.ediide.com/sites/default/files/karakteristik_jalan.geojson" %}
 {% set legendx='<i style="background: yellow"></i><span>Lokal Primer</span><br> <i style="background: #c55a11"></i><span>Kolektor Primer - 4</span>'  %}
{% elseif jenis is same as ('2')%}
{% set filex= "https://peta.ediide.com/sites/default/files/100persen.geojson" %}
{% set legendx= '<i style="background: green"></i><span>Kondisi B</span><br> <i style="background: yellow"></i><span>Kondisi S</span><br> <i style="background: orange"></i><span>Kondisi RR</span><br> <i style="background: red"></i><span>Kondisi RB</span><br> <i style="background: #000"></i><span>Jalan Nasional</span>'  %}
{% elseif jenis is same as ('3')%}
{% set filex= "https://peta.ediide.com/sites/default/files/Perkerasan_Jalan.geojson" %}
{% set legendx= '<i style="background: #2f5597"></i><span>Aspal</span><br> <i style="background: #9dc3e6"></i><span>Beton</span><br> <i style="background: #c55a11"></i><span>Lapen</span><br> <i style="background: #ffff00"></i><span>Makadam</span><br> <i style="background: red"></i><span>Tanah</span><br> <i style="background: #000"></i><span>Jalan Nasional' %}
{% else %}
		  {% set filex= "https://peta.ediide.com/sites/default/files/Revisi_Jembatan.geojson" %}
      {% set legendx= '<i><img src="https://peta.ediide.com/sites/default/files/j_rr.png"></i> <span>Jembatan RR</span><br> <i><img src="https://peta.ediide.com/sites/default/files/j_rs.png"></i> <span>Jembatan RS</span><br><i><img src="https://peta.ediide.com/sites/default/files/j_rb.png"></i> <span>Jembatan RB</span><br><i><img src="https://peta.ediide.com/sites/default/files/j_kritis.png"></i> <span>Jembatan Kritis</span><br><i style="background: #82bdf7"></i><span>Sungai</span><br> <i style="background: orange"></i><span>Jalan Kabupaten</span><br> <i style="background: black"></i><span>Jalan Nasional</span>' %}

{%endif%}
{{jenis}}
{# 
<table id="myTable" class="table table-striped table-bordered" width="100%">
  <thead>
    <tr>
    <th>STA Awal</th>
    <th>STA Akhir</th>
    <th>Kondisi</th>
    </tr>
  </thead>
 
 
 </table> #}
 
 	
 
   
   <script>

	     var jalan002 = jQuery.ajax({
          url:"{{filex}}",
          dataType: "json",
          success: console.log("jalan002 data successfully loaded."),
          error: function (xhr) {
            alert(xhr.statusText)
          }
        })

     //   console.log(jalan002);

		var jal_nas = jQuery.ajax({
          url:"https://peta.ediide.com/sites/default/files/JALAN_NASIONAL_MADIUN.geojson",
          dataType: "json",
          success: console.log("jal_nas data successfully loaded."),
          error: function (xhr) {
            alert(xhr.statusText)
          }
        })
		


    	var jalankab = jQuery.ajax({
          url:"https://peta.ediide.com/sites/default/files/jalan.geojson",
          dataType: "json",
          success: console.log("jalankab data successfully loaded."),
          error: function (xhr) {
            alert(xhr.statusText)
          }
        })


	var sungai = jQuery.ajax({
          url:"https://peta.ediide.com/sites/default/files/Sungai_KabMadiun.geojson",
          dataType: "json",
          success: console.log("jalankab data successfully loaded."),
          error: function (xhr) {
            alert(xhr.statusText)
          }
        })


		
  
		var featureNames = [];
		
            jQuery.when(jalan002,jal_nas,jalankab,sungai).done(function() {
            var map = L.map('map')
                .setView([-7.500,111.653], 14);
                

            var basemap =   L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}',{
    maxZoom: 20,
    subdomains:['mt0','mt1','mt2','mt3']
}).addTo(map);
			
		var myIcon = L.icon({
  iconUrl: 'https://peta.ediide.com/sites/default/files/jembatan.png',
  iconSize: [32, 37],
  iconAnchor: [16, 37],
  popupAnchor: [0, -28]
});

var icons = {
    'Rusak Ringan': L.icon({iconUrl: "https://peta.ediide.com/sites/default/files/j_rr.png",iconSize: [32,45]}),
    'Rusak Sedang': L.icon({iconUrl: "https://peta.ediide.com/sites/default/files/j_rs.png",iconSize: [32,45]}),
    'Rusak Berat': L.icon({iconUrl: "https://peta.ediide.com/sites/default/files/j_rb.png",iconSize: [32,45]}),
    'Kritis': L.icon({iconUrl: "https://peta.ediide.com/sites/default/files/j_kritis.png",iconSize: [32,45]})
}

	{% if jenis is same as ('4')%}	

   var myStyle = {
    "color": "orange",
    "weight": 4
    };


 //var jajal=JSON.parse(jalankab.responseJSON);
  var Ljalankab = L.geoJSON(jalankab.responseJSON,{
       style: myStyle
    });
      
       map.addLayer(Ljalankab);
        	Ljalankab.bringToBack();



          var sStyle = {
    "color": "#82bdf7",
    "weight": 2
    };


 //var jajal=JSON.parse(jalankab.responseJSON);
  var Lsungai = L.geoJSON(sungai.responseJSON,{
       style: sStyle
    });
      
       map.addLayer(Lsungai);
       	Lsungai.bringToBack();
	    
        {%endif%}	

        



            // Add requested external GeoJSON to map
    var g002 = L.geoJSON(jalan002.responseJSON,{
        	{% if jenis is same as ('4')%}	
          pointToLayer: function (feature, latlng) {
            return L.marker(latlng, {icon: icons[feature.properties.Knd_Jembat]});
    },
        {%endif%}	
			style: function(feature) {
			{% if jenis is same as ('2')%}	
				switch (feature.properties.Kondisi) {
					case 'Rusak Ringan': return {color: "orange",weight: 4};
					case 'Sedang':   return {color: "yellow",weight: 4};
					case 'Baik':   return {color: "green",weight: 4};
					case 'Rusak Berat':   return {color: "red",weight: 4};
				}

      {% elseif jenis is same as ('3')%}
      	switch (feature.properties.Perkerasan) {
					case 'Aspal': return {color: "#2f5597",weight: 4};
					case 'Beton':   return {color: "#9dc3e6",weight: 4};
					case 'Lapen':   return {color: "#c55a11",weight: 4};
					case 'makadam': return {color: "#ffff00",weight: 4};
					case 'Tanah':   return {color: "red",weight: 4};
				}

        
      {% else %}
      	switch (feature.properties.Hirarki) {
					case ' Lokal Primer': return {color: "yellow",weight: 4};
					case ' Kolektor Primer - 4':   return {color: "#c55a11",weight: 4};
				
				}				
				
      {%endif%}				
				
			},
			
			
		onEachFeature: function(feature, featureLayer) 
		   {    

       //  console.log(featureLayer.feature.geometry);
				{% if jenis is same as ('4')%}	
				featureLayer.bindPopup("<h4>Nama Jembatan: " + feature.properties.Nama_Jemba +"</h4>"
				+ "<br>" + "no_jembatan: " + feature.properties.No_Jembata
				+ "<br>" + "Kecamatan: " + feature.properties.Kecamatan
				+ "<br>" + "panjang (M): " + feature.properties.Panjang
				+ "<br>" + "lebar: " + feature.properties.Lebar
				+ "<br>" + "jml_bentang: " + feature.properties.Jml_Bntang
				+ "<br>" + "BA_Tipe: " + feature.properties.BA_Tipe
				+ "<br>" + "<h5>Kondisi Jembatan : " + feature.properties.Knd_Jembat+"</h5>"
				
				); 
        	{% elseif jenis is same as ('2')%}	
				featureLayer.bindPopup("<h4>Nama Ruas: <br>" + feature.properties.Nm_Ruas +"<br> Kondisi: "+feature.properties.Kondisi+"</h4>"        
				+ "<br>" + "No Ruas: " + feature.properties.Kode_Infra
        + "<br>" + "PnjangRuas: " + feature.properties.PnjangRuas
				+ "<br>" + "STA_Awal: " + feature.properties.STA_Awal
				+ "<br>" + "STA_Akhir: " + feature.properties.STA_Akhir
				+ "<br>" + "Kondisi: " + feature.properties.Kondisi
			
				
				);  
       	{% elseif jenis is same as ('3')%}	
         	featureLayer.bindPopup("<h4>Nama Ruas:<br>" + feature.properties.Nm_Ruas +"</h4>" 		     
        	+ "<br>" + "No Ruas: " + feature.properties.Kode_Infra
        + "<br>" + "STA_Awal: " + feature.properties.STA_Awal
				+ "<br>" + "STA_Akhir: " + feature.properties.STA_Akhir	
        + "<br>" + "Perkerasan: " + feature.properties.Perkerasan  
				);   
         {% else %}
         	featureLayer.bindPopup("<h4>Nama Ruas: " + feature.properties.Nm_Ruas +"</h4>"
				+ "<br>" + "Kecamatan: " + feature.properties.Kecamatan
				+ "<br>" + "Desa_Kel: " + feature.properties.Desa_Kel
				+ "<br>" + "Panjang Ruas: " + feature.properties.Panjang
				+ "<br>" + "Lebar (m): " + feature.properties.Lebar
				+ "<br>" + "Fungsi: " + feature.properties.Hirarki
				+ "<br>" + "No Ruas: " + feature.properties.Kd_Inf				
				);   

          {%endif%}	
				
				 featureNames.push({ STA_Awal: feature.properties.STA_Awal, STA_Akhir : feature.properties.STA_Akhir, Kondisi:feature.properties.Kondisi});

            var p = featureLayer.feature.properties;

       {% if jenis is same as ('4')%}
       	p.index = p.no_jembatan + " | " + p.nama_jembatan;
        {% else %}	
				p.index = p.Kode_Infra + " | " + p.Nm_Ruas;
          {%endif%}	
				
								
		   }
		   
 
       
       });
		   

       map.addLayer(g002);
	    	g002.bringToBack();


  var myStyle = {
    "color": "#000",
    "weight": 5
};
               // Add requested external GeoJSON to map
    var nasional = L.geoJSON(jal_nas.responseJSON,{
       style: myStyle
    });
		   
       map.addLayer(nasional);
	    





      
			
			
			//legend
		
		
			/*Legend specific*/
			var legend = L.control({ position: "topright" });

			legend.onAdd = function(map) {
        
			  var div = L.DomUtil.create("div", "legend");
			  div.innerHTML += "<h4>Legenda</h4>";
			  div.innerHTML +='{{legendx | raw}}';
			return div;
			};

			legend.addTo(map);


		var fuse = new Fuse(jalan002.responseJSON.features, {
		keys: ['properties.index',
			//'properties.operator'
		]
	});


 		var searchControl = new L.Control.Search({
		layer: g002,	
		propertyName: 'index',
		position: 'topleft',
		filterData: function(text, records) {
			var jsons = fuse.search(text),
				ret = {}, key;
			
			for(var i in jsons) {
				key = jsons[i].properties.index;
				ret[ key ]= records[key];
			}

			
			return ret;
		},
	})
  .on('search:locationfound', function(e) {
		e.layer.openPopup();
	})
	.addTo(map);


	//console.log(featureNames);
{# 
		jQuery('#myTable').DataTable({
		  data: featureNames,
		  columns : [
                  {"data" : "STA_Awal"},
                  {"data" : "STA_Akhir"},
                  {"data" : "Kondisi"}
                 ],
		  scrollY: 300,
		  paging: false
		}); #}


			
			
        });
		
		
		
		  </script>	 
		  
		  
<br>
<br>
 
  
  </div>
</article>
