{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @ingroup uikit_themeable
 */
#}

{% if node.field_grafik_kondisi_jalan.value %}
  {# Extract the JSON data from the field #}
  {% set jsonData = node.field_grafik_kondisi_jalan.value|raw %}

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
 <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
 <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
 
 
 <script>
 // Data yang Anda berikan
            var datax = JSON.parse('{{ jsonData|raw }}');
            var seriesData = Object.values(datax);
            var categories = Object.keys(datax);
        
           
             
              seriesData.splice(0, 2);
             categories.splice(0, 2);
 $(document).ready(function() {
          
             $('#t_jalan').text(datax.t_jalan.toLocaleString()+" Km");
             $('#t_ruas').text(datax.t_ruas.toLocaleString()+" Ruas");
            

            // Set nilai elemen dengan ID 'kjb' menggunakan data dari seriesData
              
            $('#kjb').text(seriesData[0].toLocaleString()+" Km");
            $('#kjs').text(seriesData[1].toLocaleString()+" Km");
            $('#kjrr').text(seriesData[2].toLocaleString()+" Km");
            $('#kjrb').text(seriesData[3].toLocaleString()+" Km");
        });

        
 </script>
 <style>
 .tiga{
     font-size:10px !important;
 }
 .tiga h4
 {    font-size: 18px;}
 .listview-title{
     font-size: 17px;
 }
 </style>
 <div class="row tiga">
       
            <div class="col-4">
              <a href="javascript:void(0)" class="p-1 text-center bg-warning-subtle card  rounded-4">
                <img src="/sites/default/files/jalan.png" width="60" height="60" class="mb-6 mx-auto" alt="">
                <p class="fw-semibold text-warning mb-1">Panjang Ruas</p>
                <h4 class="fw-semibold text-warning mb-0" id="t_jalan"></h4>
              </a>
            </div>
         
            <div class="col-4">
              <a href="#" class="p-1 text-center bg-danger-subtle card  rounded-4">
                <img src="/sites/default/files/ruas.png" width="60" height="60" class="mb-6 mx-auto" alt="">
                <p class="fw-semibold text-danger mb-1">Total Ruas</p>
                <h4 class="fw-semibold text-danger mb-0" id="t_ruas"></h4>
              </a>
            </div>
            <div class="col-4">
              <a href="#" class="p-1 text-center bg-success-subtle card  rounded-4">
                <img src="/sites/default/files/jemb.png" width="60" height="60" class="mb-6 mx-auto" alt="">
                <p class="fw-semibold text-success mb-1">Jml Jembatan</p>
                <h4 class="fw-semibold text-success mb-0" id="t_jemb"></h4>
              </a>
            </div>
    
          </div>
 

    
   
    
  <div class="row">
       <div class="listview-title  mt-4">Grafik Kondisi Jalan</div> 
       <div class="col-lg-4 d-flex align-items-strech mt-1">
         <div class="card w-100">
           <div class="card-body">
             <canvas id="myBarChart" width="400" height="200"></canvas>
              </div>
               </div>
     </div>

 </div>
  <script>
        // Data yang Anda berikan
    
        Chart.register(ChartDataLabels);
        // Ambil elemen canvas
        var ctx = document.getElementById('myBarChart').getContext('2d');

        // Buat objek chart
        var myBarChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: categories,
                datasets: [{
                    label: 'Data Series',
                    data: seriesData,
                    backgroundColor: [
                        'green',
                        'yellow',
                        'red',
                        'rgb(99, 6, 6)'
                    ],
                     datalabels: {
                        align: 'start',
                        anchor: 'end',
                        offset:-20
                      }
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        

        
        
    </script>



{% endif %}



{% if node.field_grafik_tipe_perkerasan.value %}
  {# Extract the JSON data from the field #}
  {% set jsonPerkerasan = node.field_grafik_tipe_perkerasan.value|raw %}


 <script>
 // Data yang Anda berikan
            var datax2 = JSON.parse('{{ jsonPerkerasan|raw }}');
            var seriesData2 = Object.values(datax2);
            var categories2 = Object.keys(datax2);
 $(document).ready(function() {
            

            // Set nilai elemen dengan ID 'kjb' menggunakan data dari seriesData
            $('#aspal').text(seriesData2[0].toLocaleString()+" Km");
            $('#lapen').text(seriesData2[1].toLocaleString()+" Km");
            $('#beton').text(seriesData2[2].toLocaleString()+" Km");
            $('#makadam').text(seriesData2[3].toLocaleString()+" Km");
             $('#tanah').text(seriesData2[4].toLocaleString()+" Km");
        });

        
 </script>
 

    
    
    
  <div class="row">
  <div class="listview-title  mt-4">Grafik Perkerasan Jalan</div> 
       <div class="col-lg-4 d-flex align-items-strech mt-1">
         <div class="card w-100">
           <div class="card-body">
             <canvas id="kerasBarChart" width="400" height="200"></canvas>
              </div>
               </div>
     </div>
     
    
 </div>
  <script>
        // Data yang Anda berikan
    

        // Ambil elemen canvas
        var ctx = document.getElementById('kerasBarChart').getContext('2d');

        // Buat objek chart
        var myBarChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: categories2,
                datasets: [{
                    label: 'Data Series',
                    data: seriesData2,
                    backgroundColor: [
                        '#2caffe',
                        '#544fc5',
                        '#00e272',
                        '#fe6a35',
                        '#6b8abc'
                    ],
                     borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        
    

        
        
    </script>



{% endif %}





{% if node.field_grafik_jembatan.value %}
  {# Extract the JSON data from the field #}
  {% set jemData = node.field_grafik_jembatan.value|raw %}

 <script>
 // Data yang Anda berikan
            var dataJem = JSON.parse('{{ jemData|raw }}');
            var seriesData3 = Object.values(dataJem);
            var categories3 = Object.keys(dataJem);
            
         seriesData3.splice(0, 1);
         categories3.splice(0,1);
 $(document).ready(function() {
   
            
              $('#t_jemb').text(dataJem.t_jembatan.toLocaleString()+" Unit");

            // Set nilai elemen dengan ID 'kjb' menggunakan data dari seriesData
            $('#kjbj').text(seriesData3[0].toLocaleString() +" Unit");
            $('#kjrrj').text(seriesData3[1].toLocaleString()+" Unit");
            $('#kjrsj').text(seriesData3[2].toLocaleString()+" Unit");
            $('#kjrbj').text(seriesData3[3].toLocaleString()+" Unit");
            $('#kjkj').text(seriesData3[4].toLocaleString()+" Unit");
            $('#kjrj').text(seriesData3[5].toLocaleString()+" Unit");
        });

        
 </script>
 
 
    
  <div class="row">
<div class="listview-title  mt-4">Grafik Jembatan</div> 
       <div class="col-lg-4 d-flex align-items-strech mt-1">
         <div class="card w-100">
           <div class="card-body">
             <canvas id="jemBarChart" width="400" height="200"></canvas>
              </div>
               </div>
     </div>
     

 </div>
  <script>
        // Data yang Anda berikan
    

        // Ambil elemen canvas
        var ctx = document.getElementById('jemBarChart').getContext('2d');

        // Buat objek chart
        var myBarChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: categories3,
                datasets: [{
                    label: 'Data Series',
                    data: seriesData3,
                    backgroundColor: [
                        '#8ce205',
                        '#068fff',
                        '#cac800',
                        '#f4a800',
                        '#f20063',
                        '#770505'
                    ]
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        
        
         var piex = document.getElementById('jemPieChart').getContext('2d');


        
    </script>



{% endif %}













